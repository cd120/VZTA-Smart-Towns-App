plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
//	id 'org.springframework.boot' version '2.7.0'
//	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'jacoco'
	id 'com.google.cloud.tools.jib' version '3.4.2'
	id 'org.liquibase.gradle' version '2.0.4'
	id 'checkstyle'
}

group = 'com.Team4'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	testImplementation 'org.projectlombok:lombok:1.18.22'
	testImplementation 'junit:junit:4.13.1'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.mariadb.jdbc:mariadb-java-client:2.1.2'
	implementation 'org.springframework.boot:spring-boot-starter-security'

	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'com.h2database:h2'

	testImplementation 'org.springframework.security:spring-security-test'

	testImplementation("io.github.bonigarcia:webdrivermanager:5.1.0")
	testImplementation ("org.apache.httpcomponents.client5:httpclient5:5.2.1")
	//selenium
//	testImplementation group: 'net.sourceforge.htmlunit', name: 'htmlunit', version: '2.32'
	testImplementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '4.1.0'

	// Liquibase core
//	implementation 'org.liquibase:liquibase-core'
//	// Database driver
//	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'


///////// DEBUGGING ONLY
////	testImplementation 'org.mockito:mockito-core:5.8.0'
////	testImplementation 'org.mockito:mockito-junit-jupiter:5.8.0'
////	testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
////	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'

//	testImplementation 'io.projectreactor:reactor-test:3.6.2'

	//dependencies for JUnit 5's vintage engine
//	implementation 'org.junit.vintage:junit-vintage-engine'
//	implementation 'org.hamcrest:hamcrest-core'

//	implementation 'junit:junit:4.13.2'
//	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5' //for spring boot version 2.x

// dependencies for JUnit 5's vintage engine
//	implementation 'org.junit.vintage:junit-vintage-engine'
//	implementation 'org.hamcrest:hamcrest-core'

//	runtimeOnly 'mysql:mysql-connector-java'
//////// DEBUGGING ENDS
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}

checkstyle {
	ignoreFailures = true
}


//google jib for docker images
jib {
	from {
		image = 'azul/zulu-openjdk:17-jre'
	}

	to {
		image = 'jp0123/smarttownsbuild'
		auth {
			username = 'jp0123'
			password = 'testing123'
		}
		//credHelper = 'secretservice'
		tags = ['latest', project.version]
	}
}

//	container {
//		appRoot = '/simpleApp'
//		jvmFlags = ['-Xms360m', '-Xmx360m']
//		ports = ['8080']
//		workingDirectory = '/simpleApp'
//	}
//	allowInsecureRegistries = true
